"""add cascade delete

Revision ID: 712c2e77a6d6
Revises: d6f0a01336bf
Create Date: 2025-06-21 16:06:59.670110

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '712c2e77a6d6'
down_revision: Union[str, None] = 'd6f0a01336bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('attempt', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('attempt', 'task_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('attempt_user_id_fkey'), 'attempt', type_='foreignkey')
    op.drop_constraint(op.f('attempt_task_id_fkey'), 'attempt', type_='foreignkey')
    op.create_foreign_key(None, 'attempt', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'attempt', 'task', ['task_id'], ['id'], ondelete='CASCADE')
    op.alter_column('task', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_constraint(op.f('task_user_id_fkey'), 'task', type_='foreignkey')
    op.create_foreign_key(None, 'task', 'user', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.create_foreign_key(op.f('task_user_id_fkey'), 'task', 'user', ['user_id'], ['id'])
    op.alter_column('task', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'attempt', type_='foreignkey')
    op.drop_constraint(None, 'attempt', type_='foreignkey')
    op.create_foreign_key(op.f('attempt_task_id_fkey'), 'attempt', 'task', ['task_id'], ['id'])
    op.create_foreign_key(op.f('attempt_user_id_fkey'), 'attempt', 'user', ['user_id'], ['id'])
    op.alter_column('attempt', 'task_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('attempt', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    # ### end Alembic commands ###
