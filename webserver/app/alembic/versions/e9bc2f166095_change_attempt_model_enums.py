"""Change Attempt model, enums

Revision ID: e9bc2f166095
Revises: 9a48bf99ec46
Create Date: 2025-06-14 08:32:45.208479

"""
from typing import Sequence, Union

from alembic import op
import sqlmodel
import sqlalchemy as sa
from alembic_postgresql_enum import TableReference
import os

# revision identifiers, used by Alembic.
revision: str = 'e9bc2f166095'
down_revision: Union[str, None] = '9a48bf99ec46'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

SCHEMA_NAME = os.getenv("SCHEMA_NAME", "public")


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('attempt', sa.Column('time_used_ms', sa.Integer(), nullable=False))
    op.add_column('attempt', sa.Column('memory_used_bytes', sa.Integer(), nullable=False))
    op.add_column('attempt', sa.Column('error_traceback', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('attempt', 'error_type')
    op.drop_column('attempt', 'memory_used')
    op.drop_column('attempt', 'error_message')
    op.drop_column('attempt', 'time_used')
    op.sync_enum_values(
        enum_schema=SCHEMA_NAME,
        enum_name='programming_language_enum',
        new_values=['PYTHON', 'GO', 'JAVASCRIPT', 'CPP', 'C', 'C_SHARP', 'RUST', 'JAVA', 'KOTLIN'],
        affected_columns=[TableReference(table_schema=SCHEMA_NAME, table_name='attempt', column_name='programming_language')],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema=SCHEMA_NAME,
        enum_name='attempt_status_enum',
        new_values=['RUNNING', 'OK', 'WRONG_ANSWER', 'COMPILATION_ERROR', 'RUNTIME_ERROR', 'TIME_LIMIT_EXCEEDED', 'MEMORY_LIMIT_EXCEEDED', 'OUTPUT_LIMIT_EXCEEDED'],
        affected_columns=[TableReference(table_schema=SCHEMA_NAME, table_name='attempt', column_name='status')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema=SCHEMA_NAME,
        enum_name='attempt_status_enum',
        new_values=['running', 'solved', 'failed', 'error'],
        affected_columns=[TableReference(table_schema=SCHEMA_NAME, table_name='attempt', column_name='status')],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema=SCHEMA_NAME,
        enum_name='programming_language_enum',
        new_values=['python', 'javaScript', 'cpp', 'go'],
        affected_columns=[TableReference(table_schema=SCHEMA_NAME, table_name='attempt', column_name='programming_language')],
        enum_values_to_rename=[],
    )
    op.add_column('attempt', sa.Column('time_used', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('attempt', sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('attempt', sa.Column('memory_used', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('attempt', sa.Column('error_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('attempt', 'error_traceback')
    op.drop_column('attempt', 'memory_used_bytes')
    op.drop_column('attempt', 'time_used_ms')
    # ### end Alembic commands ###
