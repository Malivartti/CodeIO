services:
  postgres:
    image: postgres:17
    container_name: codeio_postgres
    restart: no
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    env_file:
      - .local.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5431:5432


  rabbitmq:
    image: rabbitmq:3-management
    container_name: codeio_rabbitmq
    restart: no
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    env_file:
      - .local.env
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER?Variable not set}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS?Variable not set}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  code_executor:
    build:
      context: ./code_executor
    image: codeio_code_executor
    container_name: codeio_code_executor
    restart: no
    env_file:
      - .local.env
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER?Variable not set}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS?Variable not set}
    depends_on:
      rabbitmq:
        condition: service_healthy

  webserver:
    build:
      context: ./webserver
    image: codeio_webserver
    container_name: codeio_webserver
    restart: no
    env_file:
      - .local.env
    environment:
      - ENVIRONMENT=${ENVIRONMENT?Variable not set}
      - FRONTEND_HOST=${FRONTEND_HOST?Variable not set}
      - PROJECT_NAME=${PROJECT_NAME?Variable not set}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS?Variable not set}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - FIRST_SUPERUSER_EMAIL=${FIRST_SUPERUSER_EMAIL?Variable not set}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      - EMAIL_RESET_TOKEN_EXPIRE_HOURS=${EMAIL_RESET_TOKEN_EXPIRE_HOURS}
      - POSTGRES_SERVER=${POSTGRES_SERVER?Variable not set}
      - POSTGRES_PORT=${POSTGRES_PORT?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - RABBITMQ_HOST=${RABBITMQ_HOST?Variable not set}
      - RABBITMQ_PORT=${RABBITMQ_PORT?Variable not set}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER?Variable not set}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS?Variable not set}
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_BACKEND_URL=http://localhost:8000
        - NODE_ENV=production
    image: codeio_frontend
    container_name: codeio_frontend
    restart: no
    ports:
      - 80:80
    depends_on:
      - webserver

volumes:
  postgres_data:
  rabbitmq_data:
